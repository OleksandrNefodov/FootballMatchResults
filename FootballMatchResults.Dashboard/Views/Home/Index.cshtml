@inject FootballMatchResults.Dashboard.Configuration.IApplicationConfiguration appSettings;

@{
    ViewData["Title"] = "FootballMatchResults";
    string apiUrl = appSettings.FootballMatchResultsApiUrl;
}


<div class="row" style="margin-top: 15px;">
    <div class="panel-group">
        <div class="row">
            <div class="col-xs-1">
                <a data-toggle="collapse" href="#collapse1">Filters</a>
            </div>
            <div class="col-xs-10">
                <div id="collapse1" class="panel-collapse collapse">
                    <table border="0" cellspacing="15" cellpadding="15">
                        <tbody>
                            <tr>
                                <td>Minimum Date:</td>
                                <td><input name="min" id="min" type="text" readonly></td>

                                <td>Maximum Date:</td>
                                <td><input name="max" id="max" type="text" readonly></td>

                                <td><button id="filter" class="btn btn-light" onclick="FetchFilteredData()" disabled>Filter</button></td>

                            </tr>
                        </tbody>
                    </table>                 
                </div>
            </div>
        </div>            
    </div> 

     
<div class="col-md-20">
    <table id="results" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0">
        <thead>
            <tr>
                <th>MatchDate</th>
                <th>HomeTeam</th>
                <th>AwayTeam</th>
                <th>Score</th>
                <!-- <th>Edit</th> -->
            </tr>
        </thead>
    </table>
</div>
</div>

<script type="text/javascript">      
var FetchFilteredData = function(){
    $.post({
        url: "@apiUrl" + "api/results/",
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
        data: JSON.stringify({startDate:  $("#min").datepicker("getDate"), endDate:  $("#max").datepicker("getDate")}),
        success: function( data, textStatus, jQxhr ){
            resultsTable.clear();
            resultsTable.rows.add(data);
            resultsTable.draw();
        },
        error: function( jqXhr, textStatus, errorThrown ){
        }
    });
}  
    $(document).ready(function () {
        // var d = new Date();
        // var currMonth = d.getMonth();
        // var currYear = d.getFullYear();
        // var startDate = new Date(currYear, currMonth, 1);
        // var endDate = startDate.setMonth(d.getMonth()-3);

        $("#min").datepicker({ changeMonth: true, changeYear: true});
        $("#max").datepicker({ changeMonth: true, changeYear: true});
        // $("#min").datepicker("setDate", startDate);
        // $("#max").datepicker("setDate", endDate);
        
        resultsTable = $("#results").DataTable({         
                "processing": false,
                "serverSide": false,
                "filter": true,                
                "orderMulti": false,
                "pageLength": 10,
                "ajax": {
                    "url": "@apiUrl" + "api/results/",
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": ''
                },   
                "orderMulti": false,
                "pageLength": 10,
                "columnDefs":
                    [
                        {
                            "targets": [0],
                            "visible": true,
                            "render": function (data, type, row) {
                                var date = new Date(data);    
                                return date.toLocaleString();
                            }
                        },

                        // The `data` parameter refers to the data for the cell (defined by the
                        // `data` option, which defaults to the column being worked with, in
                        // this case `data: 0`.
                        {
                            "render": function (data, type, full)
                            { 
                            
                                return '<img height="15%" width="7%" src="' + full.AwayTeam.LogoUrl + '"/>' + ' ' + data
                            },

                            "targets": 1
                        },
                                                
                        {
                            "targets": [1],
                            "visible": true,
                            "searchable": true,
                            "render": function(data, type, full, meta) {
                                var result = data = typeof data === 'string' && data.length > 30 ? data.substring(0, 30) + '...' : data;
                                return result;
                            }
                        },

                        {
                            "render": function (data, type, full)
                            { 
                            
                                return '<img height="15%" width="7%" src="' + full.HomeTeam.LogoUrl + '"/>' + ' ' + data
                            },

                            "targets": 2
                        },


                        {
                            "targets": [2],
                            "visible": true,
                            "searchable": true,
                            "render": function(data, type, full, meta) {
                                var result = data = typeof data === 'string' && data.length > 30 ? data.substring(0, 30) + '...' : data;                         
                                return result;
                            }
                        },          
                        {
                            "targets": [3],
                            "visible": true,
                            "searchable": false,
                            "render": function(data, type, full, meta) {
                                var result = full.HomeGoals + " - " + full.AwayGoals;                    
                                return result;
                            }
                        }                                                                   
                    ],
                "columns": [
                    { "data": "MatchDate", "name": "MatchDate", "autoWidth": true },
                    { "data": "HomeTeam.FullName", "name": "HomeTeam", "autoWidth": true },
                    { "data": "AwayTeam.FullName", "name": "HomeTeam", "autoWidth": true },                                  
                          ]
            })

        // Event listener to the two range filtering inputs to redraw on input
        $('#min, #max').change(function () {
            var min = $('#min').datepicker("getDate");
            var max = $('#max').datepicker("getDate");

            if(min != null && max != null)
            {
                $('#filter').removeAttr('disabled');
            }

            resultsTable.draw();
        });
    }); 
</script>